apiVersion: v1
kind: ConfigMap
metadata:
  name: testcase-project-configmap
  namespace: core
data:
  config.yaml: |
    config:
      ENV: "DEV"
    postgres:
      logMode: false
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: testcase-project
  name: testcase-project
  namespace: core
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: news-crawler
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
    spec:
      containers:
        - envFrom:
            - secretRef:
                name: core-testcase-project-secrets
          image: testcase-project/testcase-project:latest
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /bin/healthcheck
                - --server_name
                - "test_project"
                - --server_address
                - "0.0.0.0:8080"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 9102
              protocol: TCP
          name: testcase-project
          env:
            - name: ENV
              value: DEV
            - name: CLUSTER_NAME
              value: dev
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          resources:
            limits:
              cpu: 1000m
              memory: 2048Mi
            requests:
              cpu: 500m
              memory: 1024Mi
          volumeMounts:
            - mountPath: /app/configmap
              name: testcase-project-configmap
      volumes:
        - configMap:
            name: testcase-project-configmap
          name: testcase-project-configmap
